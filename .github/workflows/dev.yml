name: 'Terraform Dev'

on:
  push:
    branches:
    - "test"
  pull_request:
    branches:    
      - test

#permissions:
#  contents: read

jobs:
  terraform:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    #environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Hello Dev
      run: echo "hello Dev"

  tf_fmt:
    name: Deploy Site
    needs: terraform
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      env:
        REGION: 'us-east-1'
      with:
        aws-access-key-id: ${{ secrets.Dev_ACCOUNT_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.Dev_ACCOUNT_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.REGION }}

    - name: Terraform Init
      id: init
      working-directory: 'terraform'
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      id: fmt
      working-directory: 'terraform'
      run: terraform fmt -check

    - name: Terraform Validate
      id: validate
      working-directory: 'terraform'
      run: terraform validate -no-color

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      working-directory: 'terraform'
      run: terraform plan -no-color -input=false
      continue-on-error: true
